#!/bin/bash
# Check for ID3 tags, PICTURE and PADDING block sizes in FLACs
#
#   usage: padding-check [PATH]...
#
# PATH can be a directory or file, multiple PATHs are possible
# padding-check will search in current directory if PATH is not given

set -o errexit
set -o pipefail

shopt -s nullglob
shopt -s dotglob

myname="$(basename "${0}")"

#-------------------------------------------------------------------------------
# Functions

_collect_files() {
    for arg do
        arg="$(realpath "${arg%/}")"

        if [[ -d "${arg}" ]]; then
            for i in "${arg}"/*; do
                _collect_files "${i}"
            done
            continue
        fi

        if [[ -f "${arg}" ]]; then
            # Only check file if it has .flac extension
            if [[ "${arg}" == *.flac ]]; then
                # Print current dir if it has changed
                if [[ "${arg%/*}" != "${current_dir}" ]]; then
                    current_dir="${arg%/*}"
                    printf "%s\n" "${current_dir}"
                fi
                _data_check "${arg}"
            fi
            continue
        fi

        # Abort if given argument is not a file/directory
        printf >&2 "%s: cannot access '%s': No such file/directory\n" "${myname}" "${i}"
        exit 1
    done
}

_data_check() {
    # Print filename and size
    printf "> %s (%0.1f MB)\n" "${1##*/}" "$(bc -l <<< "$(stat --printf="%s" "${1}")/1049000")"

    # Check if ID3 tags exist
    [[ "$(file "${1}")" == *ID3* ]] && printf "  ID3 tags\n"

    # Get image data, if it exists
    declare -A  image
    while read -r; do
        if (( "${#image[@]}" == 3 )); then
            printf "    Picture (%d x %d) %0.1f KiB\n" "${image[width]}" "${image[height]}" "$(bc -l <<< "${image[datalength]}/1024")"
            break
        fi
        IFS=: read -r key value _ <<< "${REPLY}"
        case "${key// }" in
            'width'|'height'|'datalength') image["${key// }"]="${value}" ;;
        esac
    done < <(metaflac --list --block-type PICTURE "${1}")
    (( "${#image[@]}" == 3 )) || printf "    No pictures found\n"

    # Get padding data, if it exists
    while read -r key value _; do
        if [[ "${key}" == "length:" ]]; then
            padding="$(bc -l <<< "${value}/1024")"
            printf "    Padding block: %0.1f KiB\n" "${padding}"
            break
        fi
    done < <(metaflac --list --block-type PADDING "${1}")
    [[ -n "${padding}" ]] || printf "    No padding found\n"
}

#-------------------------------------------------------------------------------
# Start script

(( "$#" == 0 )) && _collect_files . || _collect_files "${@}"
