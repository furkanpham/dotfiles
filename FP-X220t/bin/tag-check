#!/bin/bash
# Check FLAC files for metadata that may be missing

set -o errexit
set -o pipefail

shopt -s nullglob
shopt -s dotglob

myname="$(basename "$0")"

reset=$'\033[0m'
red=$'\033[1;31m'
green=$'\033[1;32m'
yellow=$'\033[1;33m'

declare -g  current_dir

#-------------------------------------------------------------------------------
# Functions

_usage() { printf >&2 "usage: %s target...\n" "${myname}"; exit 1; }

_collect_files() {
    for arg do
        arg="$(realpath "${arg%/}")"

        # If $arg is directory, check files inside it
        if [[ -d "${arg}" ]]; then
            for i in "${arg}"/*; do
                _collect_files "${i}"
            done
            continue
        fi

        if [[ -f "${arg}" ]]; then
            # Only check file if it has .flac extension
            if [[ "${arg}" == *.flac ]]; then
                # Print current dir if it has changed
                if [[ "${arg%/*}" != "${current_dir}" ]]; then
                    current_dir="${arg%/*}"
                    printf "%s\n" "${current_dir}"
                fi
                _tag_check "${arg}"
            fi
            continue
        fi

        # Abort if given argument is not a file/directory
        printf >&2 "%s: cannot access '%s': No such file/directory\n" "${myname}" "${i}"
        exit 1
    done
}

_tag_check() {
    declare -A  metadata
    declare     buff

    buff="> ${1##*/}: "

    # Collect tags
    while IFS=\= read -r tag _; do
        tag="${tag,,}"
        tag="${tag// }"
        case "${tag}" in
            'tracknumber'|'title'|'artist'|'album'|'date'|'albumartist') metadata["${tag}"]=1 ;;
        esac
    done < <(metaflac --export-tags-to=- "${1}")

    if (( "${#metadata[@]}" == 6 )); then
        buff+="${green}ok"
    else
        buff+="missing"
        [[ " ${!metadata[@]} " != *"tracknumber"* ]] && buff+="${red} tracknumber"
        [[ " ${!metadata[@]} " != *"title"* ]] && buff+="${red} title"
        [[ " ${!metadata[@]} " != *"artist"* ]] && buff+="${red} artist"
        [[ " ${!metadata[@]} " != *"album"* ]] && buff+="${red} album"
        [[ " ${!metadata[@]} " != *"date"* ]] && buff+="${yellow} date"
        [[ " ${!metadata[@]} " != *"albumartist"* ]] && buff+="${yellow} albumartist"
    fi
    buff+="${reset}"

    printf "%s\n" "${buff}"
}

#-------------------------------------------------------------------------------
# Start script

# Abort if no argument is given
(( $# > 0 )) || _usage

# Process all FLACs
printf "Scanning files\n"
_collect_files "${@}"
